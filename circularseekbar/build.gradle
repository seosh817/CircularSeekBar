plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

def versionStr = '1.0.1'

def getCurrentGitBranch() {
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (e) {
    }
    return gitBranch
}

def getUserName() {
    return System.properties['user.name']
}

group = "com.seosh817"
archivesBaseName = "circularseekbar"
if (getCurrentGitBranch().equals('master')) {
    version = versionStr
} else {
    version = "${versionStr}-${getUserName()}-SNAPSHOT"
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            pom {
                name = 'CircularSeekBar'
                description = 'Android CircularSeekBar Library'
                url = 'https://github.com/seosh817/CircularSeekBar'
                artifact("$buildDir/outputs/aar/circularseekbar-release.aar")
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'seosh817'
                        name = 'Seunghwan Seo'
                        email = 'seosh817@naver.com'
                    }
                }

                scm {
                    connection = 'scm:https://github.com/seosh817/CircularSeekBar.git'
                    developerConnection = 'scm:git:https://github.com/seosh817/CircularSeekBar.git'
                    url = 'https://github.com/seosh817/CircularSeekBar'
                }
            }
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? NEXUS_SNAPSHOT_REPOSITORY_URL : NEXUS_REPOSITORY_URL
            credentials {
                username = findProperty('nexusUsername')
                password = findProperty('nexusPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 23
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}